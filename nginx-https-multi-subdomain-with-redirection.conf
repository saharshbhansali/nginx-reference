user www-data;
worker_processes 1;
pid /run/nginx.pid;

events {
  worker_connections 128;
}

http {

  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 30;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # SSL Settings
  ##

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;

  # HTTP - Subdomain 1
  server {
    listen 80;
    listen [::]:80;
    server_name <subdomain.domain.tld>;
    root /usr/share/nginx/html;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    error_page 404 /404.html;
    location = /404.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }

    # Enable redirection from <subdomain.domain.tld> to
    # a default endpoint (<subdomain.domain.tld>/path/to/resource)
    # Useful for a default login/admin page
    location = / {
        # /<endpoint> is optional
        # scheme - usually https, but can be ftp, ssh, etc.
        return 301 scheme://<subdomain.domain.tld>/<endpoint>;
    }

    # Always redirect HTTP traffic (from http://<subdomain.domain.tld>/path/to/resource)
    # to HTTPS domain (https://<subdomain.domain.resource>)
    # while preserving the request uri (/path/to/resource)
    location / {
        return 301 https://<subdomain.domain.tld>$request_uri;
        # proxy_set_header X-Real-IP $remote_ddr;
        # proxy_set_header Host $http_host;
        # proxy_pass http://127.0.0.1:8080;
    }
  }

  # HTTPS - Subdomain 1
  # Settings for a TLS enabled server.
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name <subdomain.domain.tld>;
    root /usr/share/nginx/html;

    ssl_certificate "/etc/nginx/ssl/main.crt";
    ssl_certificate_key "/etc/nginx/ssl/main.key";
    #        ssl_session_cache shared:SSL:1m;
    #        ssl_session_timeout  10m;
    #        ssl_ciphers PROFILE=SYSTEM;
    #        ssl_prefer_server_ciphers on;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    error_page 404 /404.html;
    location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }

    # Enable redirection from <subdomain.domain.tld> to
    # a default endpoint (<subdomain.domain.tld>/path/to/resource)
    # Useful for a default login/admin page
    location = / {
        # /<endpoint> is optional
        # scheme - usually https, but can be ftp, ssh, etc.
        return 301 scheme://<subdomain.domain.tld>/<endpoint>;
    }

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:8080;
    }
  }

  # HTTP - Subdomain 2
  server {
    listen 80;
    listen [::]:80;
    server_name <subdomain.domain.tld>;
    root /usr/share/nginx/html;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    error_page 404 /404.html;
    location = /404.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }

    # Always redirect *ALL* HTTP traffic (from http://<subdomain.domain.tld>/path/to/resource)
    # to HTTPS domain (https://<subdomain.domain.resource>)
    # while preserving the request uri (/path/to/resource)
    location / {
        return 301 https://<subdomain.domain.tld>$request_uri;
    }
  }

  # HTTPS - Subdomain 2
  # Settings for a TLS enabled server.
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name vop1.sankalpmukim.dev;
    root /usr/share/nginx/html;

    ssl_certificate "/etc/nginx/ssl/main.crt";
    ssl_certificate_key "/etc/nginx/ssl/main.key";

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    error_page 404 /404.html;
    location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }

    location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $http_host;
      proxy_pass http://127.0.0.1:8000;
    }
  }

  # HTTP - All other traffic from anywhere
  server {
    listen 80;
    listen [::]:80;
    server_name _;
    root /usr/share/nginx/html;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    error_page 404 /404.html;
    location = /404.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }

    location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $http_host;
      proxy_pass http://127.0.0.1:3000;
    }
  }

  # HTTP - All other traffic from anywhere
  # Settings for a TLS enabled server.
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;
    root /usr/share/nginx/html;

    ssl_certificate "/etc/nginx/ssl/main.crt";
    ssl_certificate_key "/etc/nginx/ssl/main.key";
    #        ssl_session_cache shared:SSL:1m;
    #        ssl_session_timeout  10m;
    #        ssl_ciphers PROFILE=SYSTEM;
    #        ssl_prefer_server_ciphers on;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    error_page 404 /404.html;
    location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }

    location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $http_host;
      proxy_pass http://127.0.0.1:3000;
    }
  }
}
